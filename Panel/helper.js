// Generated by CoffeeScript 1.8.0
(function() {
  var SID, control;

  SID = {
    "3": "叁日月宗近",
    "5": "小狐丸",
    "7": "石切丸",
    "9": "岩融",
    "11": "今剣",
    "19": "にっかり青江",
    "23": "鸣狐",
    "25": "一期一振",
    "27": "鲇尾藤四郎",
    "29": "骨喰藤四郎",
    "31": "平野藤四郎",
    "33": "厚藤四郎",
    "39": "前田藤四郎",
    "41": "秋田藤四郎",
    "45": "乱藤四郎",
    "47": "五虎煺",
    "49": "薬研藤四郎",
    "55": "莺丸",
    "59": "蛍丸",
    "61": "爱染国俊",
    "65": "蜻蛉切",
    "73": "烛台切光忠",
    "79": "江雪左文字",
    "81": "宗叁左文字",
    "83": "小夜左文字",
    "85": "加州清光",
    "87": "大和守安定",
    "89": "歌仙兼定",
    "91": "和泉守兼定",
    "93": "陆奥守吉行",
    "95": "山姥切国広",
    "97": "山伏国広",
    "99": "堀川国広",
    "101": "蜂须贺虎彻",
    "116": "大倶利伽罗",
    "118": "へし切长谷部",
    "122": "狮子王",
    "128": "同田贯正国",
    "130": "鹤丸国永",
    "132": "太郎太刀",
    "134": "次郎太刀",
    "138": "御手杵"
  };

  control = new Vue({
    el: '#app',
    data: {
      version: '0.1.0',
      gaming: false,
      player: {
        "name": "",
        "bonemeal": "",
        "currency": "",
        "level": "",
        "max_sword": "",
        "next_exp": ""
      },
      resource: {},
      sword: {},
      forge: {},
      equip: {},
      party: {},
      repair: []
    },
    ready: function() {
      return chrome.devtools.network.onRequestFinished.addListener((function(_this) {
        return function(request) {
          var tohken;
          tohken = request.request.url.match(/http:\/\/(.*?)\.touken-ranbu\.jp\/(.*)/);
          if (tohken !== null) {
            if (tohken[1] === "static") {
              return;
            }
            return _this.route(request, tohken[2]);
          }
        };
      })(this));
    },
    filters: {
      i2n: function(i) {
        return SID[i];
      }
    },
    methods: {
      route: function(request, action) {
        if (!this.gaming) {
          this.gaming = true;
        }
        switch (action) {
          case 'home':
            return this.parser(request, (function(_this) {
              return function(data) {
                _this.resource = data.resource;
                return _this.player.receive = data.receive;
              };
            })(this));
          case 'forge':
            return this.parser(request, (function(_this) {
              return function(data) {
                _this.resource = data.resource;
                _this.sword = data.sword;
                _this.forge = data.forge;
                _this.equip = data.equip;
                return _this.party = data.party;
              };
            })(this));
          case 'party/list':
            return this.parser(request, (function(_this) {
              return function(data) {
                _this.sword = data.sword;
                _this.equip = data.equip;
                return _this.party = data.party;
              };
            })(this));
          case 'login/start':
            return this.parser(request, (function(_this) {
              return function(data) {
                if (data.currency) {
                  _this.player.currency = data.currency.money;
                }
                if (data.item["8"]) {
                  _this.player.bonemeal = data.item["8"]["num"];
                }
                _this.player.name = data.name;
                _this.player.level = data.level;
                return _this.player.max_sword = data.max_sword;
              };
            })(this));
        }
      },
      parser: function(request, callback) {
        return request.getContent(function(content, encoding) {
          return callback(JSON.parse(content));
        });
      },
      output: function(obj) {
        return document.write(obj + "<br>");
      }
    }
  });

}).call(this);
